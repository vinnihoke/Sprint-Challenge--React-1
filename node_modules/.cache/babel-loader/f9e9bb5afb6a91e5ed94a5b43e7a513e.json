{"ast":null,"code":"import _slicedToArray from \"/Users/vinnihoke/Dropbox/git-projects/Lambda-School/Sprints/Sprint-Challenge--React-1/Sprint-Challenge--React-1/starwars/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vinnihoke/Dropbox/git-projects/Lambda-School/Sprints/Sprint-Challenge--React-1/Sprint-Challenge--React-1/starwars/src/App.js\";\n// React Imports\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Material Icons\n\nimport Icon from '@material-ui/core/Icon'; // Local Imports\n\nimport './scss/App.scss';\nimport CharacterCard from './components/CharacterCard/CharacterCard';\n\nconst App = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const _useState5 = useState('React Wars'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        header = _useState6[0],\n        setHeader = _useState6[1];\n\n  useEffect(() => {\n    setHeader('Content Loading...');\n    axios.get(\"https://swapi.co/api/people/?page=\".concat(page)).then(results => {\n      setCharacters(results.data.results);\n      setHeader('React Wars');\n    }).catch(err => {\n      console.log(err);\n      setHeader(\"Content Load Error\");\n      alert('There was an error loading the data. Please try again later.');\n    });\n  }, [page]);\n\n  const pageUp = () => {\n    return page < 9 ? setPage(page + 1) : null;\n  };\n\n  const pageDown = () => {\n    return page > 1 ? setPage(page - 1) : null;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"Header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, header), React.createElement(\"button\", {\n    className: \"ButtonUp\",\n    onClick: pageUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"keyboard_arrow_right\")), React.createElement(\"button\", {\n    className: \"ButtonDown\",\n    onClick: pageDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"keyboard_arrow_left\")), React.createElement(\"div\", {\n    className: \"CardHolder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, characters.map((character, index) => {\n    return React.createElement(CharacterCard, {\n      key: index,\n      character: character,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vinnihoke/Dropbox/git-projects/Lambda-School/Sprints/Sprint-Challenge--React-1/Sprint-Challenge--React-1/starwars/src/App.js"],"names":["React","useState","useEffect","axios","Icon","CharacterCard","App","characters","setCharacters","page","setPage","header","setHeader","get","then","results","data","catch","err","console","log","alert","pageUp","pageDown","map","character","index"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CAEA;;AACA,OAAO,iBAAP;AACA,OAAOC,aAAP,MAA0B,0CAA1B;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AAEA;AACA;AACA;AANgB,oBAQoBL,QAAQ,CAAC,EAAD,CAR5B;AAAA;AAAA,QAQTM,UARS;AAAA,QAQGC,aARH;;AAAA,qBASQP,QAAQ,CAAC,CAAD,CAThB;AAAA;AAAA,QASTQ,IATS;AAAA,QASHC,OATG;;AAAA,qBAUYT,QAAQ,CAAC,YAAD,CAVpB;AAAA;AAAA,QAUTU,MAVS;AAAA,QAUDC,SAVC;;AAYhBV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS,CAAC,oBAAD,CAAT;AACAT,IAAAA,KAAK,CACJU,GADD,6CAC0CJ,IAD1C,GAECK,IAFD,CAEMC,OAAO,IAAI;AACfP,MAAAA,aAAa,CAACO,OAAO,CAACC,IAAR,CAAaD,OAAd,CAAb;AACAH,MAAAA,SAAS,CAAC,YAAD,CAAT;AACD,KALD,EAMCK,KAND,CAMOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,MAAAA,SAAS,CAAC,oBAAD,CAAT;AACAS,MAAAA,KAAK,CAAC,8DAAD,CAAL;AACD,KAVD;AAWD,GAbQ,EAaN,CAACZ,IAAD,CAbM,CAAT;;AAeA,QAAMa,MAAM,GAAG,MAAM;AACnB,WAAQb,IAAI,GAAG,CAAP,GAAWC,OAAO,CAACD,IAAI,GAAG,CAAR,CAAlB,GAA+B,IAAvC;AACD,GAFD;;AAGA,QAAMc,QAAQ,GAAG,MAAM;AACrB,WAAQd,IAAI,GAAG,CAAP,GAAWC,OAAO,CAACD,IAAI,GAAG,CAAR,CAAlB,GAA+B,IAAvC;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBE,MAAxB,CADF,EAGE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEW,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8C,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA9C,CAHF,EAIE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAlD,CAJF,EAME;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,UAAU,CAACiB,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACpC,WAAO,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,KAApB;AAA2B,MAAA,SAAS,EAAED,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CANF,CADF;AAcD,CAhDD;;AAmDA,eAAenB,GAAf","sourcesContent":["// React Imports\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Material Icons\nimport Icon from '@material-ui/core/Icon'\n\n// Local Imports\nimport './scss/App.scss';\nimport CharacterCard from './components/CharacterCard/CharacterCard';\n\n\n\n\nconst App = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n  const [characters, setCharacters] = useState([]);\n  const [page, setPage] = useState(1);\n  const [header, setHeader] = useState('React Wars');\n\n  useEffect(() => {\n    setHeader('Content Loading...');\n    axios\n    .get(`https://swapi.co/api/people/?page=${page}`)\n    .then(results => {\n      setCharacters(results.data.results);\n      setHeader('React Wars');\n    })\n    .catch(err => {\n      console.log(err);\n      setHeader(\"Content Load Error\");\n      alert('There was an error loading the data. Please try again later.')\n    })\n  }, [page])\n\n  const pageUp = () => {\n    return (page < 9 ? setPage(page + 1) : null);\n  }\n  const pageDown = () => {\n    return (page > 1 ? setPage(page - 1) : null);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"Header\">{header}</h1>\n\n      <button className=\"ButtonUp\" onClick={pageUp}><Icon>keyboard_arrow_right</Icon></button>\n      <button className=\"ButtonDown\" onClick={pageDown}><Icon>keyboard_arrow_left</Icon></button>\n\n      <div className=\"CardHolder\">\n        {characters.map((character, index) => {\n          return <CharacterCard key={index} character={character}/>\n        })}\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}